<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ımageList2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ımageList2.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABi
        DgAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABIwEAASMBAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABjAMAASMDAAEBAQABCAUAASQBExgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/AQAC/wL0AvMC8gHx
        BfAIvAXwAfEC8gLzAfQC/2kAAf8B8QEHBO8B9wHvFPcE7wEHAfJpAAL/AfQC8wLyAe8UbgEcAvIC8wH0
        Af9pAAb/AZMXSwX/EQAB8gHsAZIB8QH0ArwB9FAABv8BRQFLAfEE8gnxBfABvAJLBf8HAAL/BgAB/wHv
        AesBBwH3AW0BtQH1Af8CGQEHAbwB/0wABv8BKgFLBvII8QbwAksF/wUAAf8B8QLqAZIB8AH0Af8BAAH/
        AewB+APwAdUB/wGXAS4BTwFVAv8CGQEHAbwB/0gABv8BKgFLB/IJ8QTwAksF/wQAAf8B7wESAW0DFAES
        AW0B7wFtAe8D8AG0Af8CLgJVA1YB2wHcAv8CGUcABv8BKgFLCfIH8QTwAksF/wMAAf8BbQIUAu0EFAET
        AbwC8AG8AbQB/wEtAS4CVQNWAtsB9AHcAf8BGQEHRwAG/wJLAfMJ8gXxAvAB8QLwAksF/wIAAf8B6gIU
        Au8CBwLvAW0BFAFtAbwBtAH0AfMCLQFVAU8BUQFTA9sC3AH/AQkB8AHtRwAG/wJLAfMC8gHwAv8C8grx
        AfAB8QJLBf8CAAHtAhQD7wUHAe8BDgFlAe8BSQEnAQICLQFTAk0BbgHbAdwB/wHdAbwB8AFtAf9HAAb/
        AksD8wHwAv8G8gjxAksF/wEAAf8B6gEUA+8BBwK8Ae4GBwEUAQABJwECAUwBKgFFAdsC3AH/AbQC8AEH
        SQAG/wJLAfMB8gHzA/AI8gbxAksF/wEAAf8BEgTvAfED8AO8Ae4GBwHqAQABZgK0Ae8BiwLwAeoB6wH/
        SAAF/wH2ASoBSwXzCvIF8QJLBf8BAAH/ARICBwLvAvID8QPwBLwGBwH4AgAEFAEHSAAF/wH2AksC8wHy
        A/ML8gPxAksF/wEAAf8BbQQHA/MD8gHxAREBEAEOAe8B8AS8BgcB7AHvARMB70gABf8B9gJLA/MO8gPx
        AksF/wIAAW0B7gIHBPQD8wQSAhMBQwHxA/ADvAHuAQcBLQFaAe0BB0gABv8BKgFLA/MB8AH2ASYB8QHz
        Ce8C8gHxAksF/wIAAeoDvAf0A+oHEgEOAQ8D8AO8AQcB8EgABv8CSwPzAbwBRwH0AUcC8wvyAksF/wIA
        AeoCvAHzBvQB8QZtBeoCEgHtAfED8AG8AfFIAAb/ASoBSwbzAUEBRwPzCfICSwX/AgAB6gHwAvIE8wL0
        BusIbQETAvID8QHzSAAG/wIqB/MBJgHxA/MI8gFRAUsF/wIAAW0D8QTyAfMB+AHrAfgB6wH4BusEbQHt
        A/MC8gH0SAAG/wEqAUsI8wEbA/MI8gFRAUsF/wIAAf8B6gG8A/AC8QGSAm0G6wH4BusE9AHzAW0B/0gA
        Bv8BSwEqA/MCBwGTCfMF8gFRAUsF/wQAAf8B8QESAe8BvAHrAuoJbQTrAewC9AH2AvQB7EkABf8B9gEq
        AUsD8wHwAZQBRwH0AfMJBwPyAVEBSwX/BgAB7wHzAewB6gMSBeoHbQHzBPQB8gH/SQAF/wH2ASoBSwLz
        AfQBvAFHAfQBRwHzAfQI8wPyAVEBSwX/BgAB8gGLAhkB3QEJARkBtQLqAxIE6gFtA/ID8wGSSgAG/wEq
        AUsG8wEWAUcL8wHyAVEBSwX/BwABtAYZAd0DCQHrAeoDEgHwA/EC8gFtSwAG/wEqAUsG8wH0AUcB9Arz
        AfIBUQFLBf8GAAHyDBkBCQEZAe8B8QFtAeoB6wHwAbwB70wABv8BSwFMB/MC9AvzAVIBTAX/BgAOGQGt
        Ae0FAAH/TQAG/wFLAUwC8wj0CvMCUgX/BQAB8QGtBPQJGQH/VAAG/wEqAUwBHAH0AfMBUg0xAfMB9AGZ
        AlIF/wUAAf8D9QX0BhlVAAb/AfIBUgF0AlIOMQRSAXQF/wQAAa0BtQP/A/UG9AEZAa1VAAj/AhsB8wFS
        BTEBegGaBjEDGwL2Bf8EAAH1AfEH/wP1A/RWAAv/AZoDMgExAXoB9gH/AcMEMgFSCv8IAAH/AfQCtAHz
        BP8B9QEJVgAM/wHDAhoBWQFTAfYB/wEaATIDGgv/DwAB/wH0AbRXAA//AZoBOAJSAjgO/2kAEP8BWQI4
        AVkP/2kAEf8B9QH2AfUP/2kAAUIBTQE+BwABPgMAASgDAAGMAwABIwMAAQEBAAEBBQABvAECFgAD/wUA
        AR8D/wH8DwABHwP/AfwPAAEfA/8B/A8AAR8B/wHwAQ8B/A8AAR8BzwHAAQAB/A8AAR8BAAGAAQABDA8A
        AR4DAAEEDwABHAMAAQQPAAEYAwABBA8AARgDAAEEDwABEAMAARwPAAEQAwABDA8AARADAAEMDwABEAMA
        AQwPAAEYAwABDA8AARgDAAEMDwABGAMAAQwPAAEYAwABDA8AARgDAAEMDwABGAMAAQwPAAEeAwABHA8A
        AR8BgAIAARwPAAEfAYACAAE8DwABHwHAAgABfA8AAR8BgAIAAfwPAAEfAYABAAF9AfwPAAEfAgAB/wH8
        DwABHwEAAQEB/wH8DwABHgEAAQEB/wH8DwABHgEAAQMB/wH8DwABHwHgAQMB/wH8DwABHwH/AccB/wH8
        DwABHwP/AfwPAAEfA/8B/A8AAR8D/wH8CwAL
</value>
  </data>
</root>